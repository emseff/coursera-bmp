 def PatternCount(Text, Pattern):
        count = 0;
        for i in range(len(Text)-len(Pattern)+1):
            if Text[i:i+len(Pattern)] == Pattern:
                count = count+1
        return count
    print (PatternCount(Text, Pattern))

    #returns reverse compliment of a DNA string
    def ReverseCompliment(Pattern):
        Pattern = Reverse(Pattern)
        Pattern = Complement(Pattern)
        return Pattern
    def Reverse(Pattern):
        rev = ""
        for char in Pattern:
            rev = char + rev
        return rev
    def Complement(Pattern):
        pairs = {"A":"T","G":"C","T":"A","C":"G"}
        complement = ""
        for base in Pattern:
            complement += pairs.get(base)
        return complement

    #finds each iteration of pattern in a string
    def PatternMatching(Pattern, Genome):
        positions = [] 
        for i in range(len(Genome)-len(Pattern)+1):
            if Genome[i:i+len(Pattern)] == Pattern:
                positions.append(i)
        return positions
